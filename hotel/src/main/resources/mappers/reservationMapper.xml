<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.hotel.dao.ReservationDao">
    <resultMap id="reservationResultMap" type="com.example.hotel.dto.Reservation">
        <result property="payId" column="pay_id" />
        <result property="customerId" column="customer_id" />
        <result property="checkin" column="checkin" />
        <result property="checkout" column="checkout" />
        <result property="roomId" column="room_id" />
        <result property="price" column="price"/>
        <!-- Room 객체에 대한 매핑 -->
        <association property="room" javaType="com.example.hotel.dto.Room">
            <result column="room_id" property="roomId"/>
            <result column="room_name" property="roomName"/>
            <result column="price" property="price"/>
        </association>
    </resultMap>
    <insert id="addReservation" parameterType="com.example.hotel.dto.Reservation">
        INSERT INTO RESERVATION (pay_id, customer_id, checkin, checkout, PAYMENT ,room_id)
        VALUES (reservation_seq.nextval, #{customerId}, #{checkin},#{checkout}, (TO_DATE(#{checkout}, 'YYYY-MM-DD') - TO_DATE(#{checkin}, 'YYYY-MM-DD')+1) * #{price},#{roomId})
    </insert>
    <select id="selectRoomByRoomId" parameterType="int" resultType="com.example.hotel.dto.Room">
        SELECT * FROM room WHERE room_id = #{roomId}
    </select>
    <select id="getAllReservations" resultType="com.example.hotel.dto.Reservation">
        SELECT r.PAY_ID as payId, r.CUSTOMER_ID as customerId, TO_CHAR(CHECKIN, 'YYYY-MM-DD') AS CHECKIN, TO_CHAR(r.CHECKOUT, 'YYYY-MM-DD') AS CHECKOUT, ro.ROOM_NAME as roomName , h.hotel_Name as hotelName
        FROM reservation r,room ro, hotel h WHERE r.ROOM_ID  = ro.ROOM_ID AND h.HOTEL_ID =ro.HOTEL_ID order by pay_id
    </select>
    <update id="updateReservation" parameterType="com.example.hotel.dto.Reservation">
        UPDATE RESERVATION
        SET checkin =#{checkin} ,
        checkout =#{checkout}
        WHERE pay_id = #{payId}
    </update>
    <select id="getReservationById" resultType="com.example.hotel.dto.Reservation">
        SELECT PAY_ID as payId,CUSTOMER_ID as customerId ,TO_CHAR(CHECKIN, 'YYYY-MM-DD') as checkin,to_char(checkout,'yyyy-mm-dd') as checkout ,
        ro.ROOM_NAME as roomName, h.HOTEL_NAME AS hotelName,
        r.payment as payment
        FROM reservation r,ROOM ro,HOTEL h  WHERE r.ROOM_ID  = ro.ROOM_ID AND h.HOTEL_ID =ro.HOTEL_ID
        and pay_id = #{payId}
    </select>
    <delete id="deleteReservation" parameterType="int">
        delete from reservation where pay_id =#{payId}
    </delete>
    <select id="getReadReservation" parameterType="int" resultType="com.example.hotel.dto.Reservation" >
        SELECT r.PAY_ID as payId, r.CUSTOMER_ID as customerId, TO_CHAR(CHECKIN, 'YYYY-MM-DD') AS CHECKIN,
        TO_CHAR(r.CHECKOUT, 'YYYY-MM-DD') AS CHECKOUT, ro.ROOM_NAME as roomName , h.hotel_Name as hotelName
        FROM reservation r,room ro, hotel h WHERE r.ROOM_ID  = ro.ROOM_ID AND h.HOTEL_ID =ro.HOTEL_ID AND r.PAY_ID = #{payId} order by pay_id
    </select>
</mapper>
